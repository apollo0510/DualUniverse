{
  "slots": {
    "0": {
      "name": "cont1",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "1": {
      "name": "cont2",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "2": {
      "name": "cont3",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "3": {
      "name": "cont4",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "4": {
      "name": "cont5",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "5": {
      "name": "disp1",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "6": {
      "name": "disp2",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "7": {
      "name": "disp3",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "8": {
      "name": "disp4",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "9": {
      "name": "disp5",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "-1": {
      "name": "unit",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "-2": {
      "name": "system",
      "type": {
        "events": [],
        "methods": []
      }
    },
    "-3": {
      "name": "library",
      "type": {
        "events": [],
        "methods": []
      }
    }
  },
  "handlers": [
    {
      "code": "objects = \n{\n    { cont = cont1; disp=disp1; name=\"Iron\";      container_type=3; container_count=3; container_volume=537600; },\n    { cont = cont2; disp=disp2; name=\"Aluminium\"; container_type=3; container_count=3; container_volume=537600; },\n    { cont = cont3; disp=disp3; name=\"Carbon\";    container_type=3; container_count=3; container_volume=537600; },\n    { cont = cont4; disp=disp4; name=\"Silicon\";   container_type=3; container_count=3; container_volume=537600; },\n};\n\n-- below code is the same for all units\n\ncontainer=\n{\n\t[1]={ size=\"S\" ; mass =  1280; volume =   8000; },\n     [2]={ size=\"M\" ; mass =  7420; volume =  64000; },\n     [3]={ size=\"L\" ; mass = 14840; volume = 128000; }\n};\n\ncontainer_skill = 1.4; -- multiplyer for volume\n\nmaterials=\n{\n      -- T1 ----------------\n\t[\"Carbon\"] \t= { density = 2.27; comment=\"Coal\";} ,\n\t[\"Aluminium\"]= { density = 2.70; comment=\"Bauxite\";} ,\n\t[\"Iron\"]     = { density = 7.85; comment=\"Hematite\";} ,\n\t[\"Silicon\"]\t= { density = 2.33; comment=\"Quartz\";} ,\n\n      -- T2 ----------------\n   \t[\"Chromium\"] = { density = 7.19; comment=\"Chromite\";} ,\n   \t[\"Copper\"]\t= { density = 8.96; comment=\"Malachite\";} ,\n   \t[\"Calcium\"]\t= { density = 1.55; comment=\"Limestone\";} ,\n   \t[\"Sodium\"]\t= { density = 0.97; comment=\"Natron\";} ,\n    \n      -- T3 ----------------\n     [\"Nickel\"]\t= { density = 8.91; comment=\"Garniertite\";} ,\n     [\"Lithium\"] = { density = 0.53; comment=\"Petalite\";} ,\n     [\"Silver\"]\t= { density = 10.49; comment=\"Acanthite\";} , \n   \t[\"Sulfur\"]  = { density = 1.82; comment=\"Pyrite\";} ,\n\n    \n   \t[\"Ore\"]\t    = { density=2.0; },\n\t[\"WarpCells\"]   = { density=2.5; volume=40; },    \n};\n\nfunction AnalyseContainer(o)\n    local container_mass  = o.cont.getSelfMass();\n    local container_type  = o.container_type;\n    local container_count = o.container_count;\n    local container_volume = o.container_volume or o.cont.getMaxVolume();\n\n    if container_type == nil then\n        container_count=1;\n        if container_mass > 2000 then\n            if container_mass > 8000 then\n                container_type = 3;\n            else\n                container_type = 2;\n            end\n        else\n            container_type = 1;\n        end\n    end\n    \n    local c = container[container_type];\n    local m = materials[o.name];\n    o.material   = m;\n    if container_volume~=nil and container_volume>0 then\n        system.print(\"container volume = \" ..container_volume);     \n        o.max_volume = container_volume;\n    else\n        o.max_volume = c.volume * container_skill * container_count;\n    end\n    o.mass   = -1.0;\n    o.pieces =  0.0;\n    o.density          = m.density;\n    o.volume_per_piece = m.volume;\n    if o.density and o.volume_per_piece then\n    \to.mass_per_piece   = o.volume_per_piece * o.density;\n    end    \nend\n\nfunction UpdateContainers()\n   local n=#objects; \n   for i = 1,n do\n        local o = objects[i];\n        local cont = o.cont;\n        local disp = o.disp;\n        local m    = o.material;\n        if cont then\n            if disp then\n                if o.max_volume then\n                    local mass = cont.getItemsMass();\n                    if mass~=o.mass then\t\n                        o.mass    = mass;\n                        o.volume  = mass / o.density;\n                        o.percent = o.volume * 100.0 / o.max_volume;\n\n                        disp.clear();\n                        disp.addText(10,0,15,o.name);\n                        \n                        if m.comment then\n\t                      disp.addText(20,20,10,m.comment);\n                        end\n                        \n                        local text=string.format(\"%.2f%%\",o.percent);\n                        disp.addText(10,40,20,text);\n\n                        if o.mass_per_piece then\n                        \to.pieces  = mass / o.mass_per_piece;\n                             text=string.format(\"%d pcs\",o.pieces );\n                             disp.addText(10,80,10,text);\n\t\t\t\t   else \t                            \n                            text=string.format(\"%.1f tons\",mass / 1000.0 );\n                            disp.addText(10,80,10,text);\n                        end    \n                    end\n                else\n                    AnalyseContainer(o);\n                end  \n            else\n               system.print(\"Display not found : \" .. o.name);         \n            end    \n        else\n           system.print(\"Container not found : \" .. o.name);    \n        end    \n   end    \nend\n\n\nunit.setTimer(\"ContChecker\",1.0);\n\n\n",
      "filter": {
        "args": [],
        "signature": "start()",
        "slotKey": "-1"
      },
      "key": "0"
    },
    {
      "code": "UpdateContainers();",
      "filter": {
        "args": [ { "value": "ContChecker" } ],
        "signature": "tick(timerId)",
        "slotKey": "-1"
      },
      "key": "1"
    }
  ],
  "methods": [],
  "events": []
}